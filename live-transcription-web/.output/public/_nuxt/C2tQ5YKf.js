import{H as C,m as g,d as v,r as d,I as b,j as y,t as p,v as k,x as c,J as S,K as m,L as l,y as f,_ as R,z as x,M as E,N as W}from"./n16QTVp4.js";const h=C("transcription",{state:()=>({transcription:"",error:null,isConnected:!1,worker:null,sentChunksCount:0,receivedChunksCount:0,allTranscriptionsReceived:!1,waitForAllResolve:null}),actions:{initializeWorker(){try{console.log("Initializing transcription Web Worker."),this.worker=new Worker(new URL(""+new URL("../workers/transcriptionWorker.js",import.meta.url).href,import.meta.url),{type:"module"}),this.setupWorkerHandlers()}catch(e){throw console.error("Failed to initialize Web Worker:",e),this.error="Failed to initialize transcription service",new Error("Failed to initialize transcription service")}},setupWorkerHandlers(){this.worker&&(console.log("Setting up worker message handlers."),this.worker.onmessage=e=>{const{type:s,payload:o}=e.data;switch(console.log("Worker message received:",s),s){case"CONNECTED":console.log("WebSocket connected event received from worker."),this.isConnected=!0,this.error=null;break;case"DISCONNECTED":console.log("WebSocket disconnected event received from worker.",o),this.isConnected=!1;break;case"MESSAGE":console.log("Worker MESSAGE received:",o),this.handleWorkerMessage(o);break;case"ERROR":console.error("Worker error:",o),this.error=o;break;default:console.warn("Unknown message type from worker:",s)}},this.worker.onerror=e=>{console.error("Worker error:",e),this.error="Transcription service error",this.isConnected=!1})},handleWorkerMessage(e){switch(e.type){case"transcription":this.transcription+=e.text+" ",this.receivedChunksCount+=1,console.log("Received transcription chunk. Total received:",this.receivedChunksCount),this.checkAllTranscriptionsReceived();break;case"warning":console.warn("Transcription warning:",e.message),this.error=e.message;break;case"session_init":console.log("Session initialized with ID:",e.session_id);break;default:console.error("Unknown message type:",e.type)}},connectWebSocket(e){return console.log("connectWebSocket called with wsEndpoint:",e),new Promise((s,o)=>{if(this.isConnected){console.log("Already connected. Resolving promise."),s();return}if(!this.worker)try{this.initializeWorker()}catch(t){console.error("Failed to initialize worker:",t),o(t);return}if(!this.worker){const t="Transcription service is not available";console.error(t),this.error=t,o(new Error(t));return}if(!e){const t="Transcription service configuration is missing";console.error(t),this.error=t,o(new Error(t));return}const a=t=>{var n;const{type:r}=t.data;r==="CONNECTED"&&(console.log("WebSocket connected event received from worker."),(n=this.worker)==null||n.removeEventListener("message",a),s())},i=t=>{var u;const{type:r,payload:n}=t.data;r==="ERROR"&&(console.error("Error event received from worker:",n),(u=this.worker)==null||u.removeEventListener("message",i),o(new Error(n)))};this.worker.addEventListener("message",a),this.worker.addEventListener("message",i),console.log("Sending CONNECT message to worker."),this.worker.postMessage({type:"CONNECT",payload:{transcriptionWsEndpoint:e}})})},disconnectWebSocket(){console.log("disconnectWebSocket called."),this.worker&&(this.worker.postMessage({type:"DISCONNECT"}),console.log("DISCONNECT message sent to worker.")),this.isConnected=!1,console.log("isConnected set to false.")},async sendAudioChunk(e,s){if(console.log("sendAudioChunk called with wsEndpoint:",e),!this.worker){const o="Transcription service is not available";throw this.error=o,console.error(o),new Error(this.error)}if(!this.isConnected){const o="WebSocket is not connected";throw this.error=o,console.error(o),new Error(this.error)}try{this.worker.postMessage({type:"SEND_AUDIO",payload:{wavData:s}},[s]),this.sentChunksCount+=1}catch(o){throw console.error("Error processing audio chunk:",o),this.error="Failed to process audio data",new Error(this.error)}},async finalize(){console.log("finalize called.");try{await this.waitForAllTranscriptions(),console.log("All transcriptions received."),this.disconnectWebSocket(),console.log("WebSocket disconnected.")}catch(e){throw console.error("Error during finalize:",e),e}},reset(){this.transcription="",this.error=null,this.isConnected=!1,this.sentChunksCount=0,this.receivedChunksCount=0,this.allTranscriptionsReceived=!1,this.waitForAllResolve=null},cleanup(){this.worker&&(this.disconnectWebSocket(),this.worker.terminate(),this.worker=null),this.reset()},waitForAllTranscriptions(){return new Promise(e=>{if(this.receivedChunksCount>=this.sentChunksCount){console.log("All transcriptions already received."),e();return}this.waitForAllResolve=e})},checkAllTranscriptionsReceived(){this.receivedChunksCount>=this.sentChunksCount&&this.waitForAllResolve&&(this.waitForAllResolve(),this.waitForAllResolve=null)}}}),A=C("audio",{state:()=>({isRecording:!1,isStopping:!1,error:null,audioContext:null,audioWorklet:null,stream:null,audioChunks:[],showChunks:!1,chunkCounter:1,waitingToClose:!1,flushPromiseResolve:null}),getters:{combinedError(){const e=h();return this.error||e.error}},actions:{getAudioConstraints(){const e=g();return{audio:{channelCount:e.public.audio.channels,sampleRate:e.public.audio.targetSampleRate,...e.public.audio.constraints}}},toggleChunksVisibility(){this.showChunks=!this.showChunks},async downloadChunk(e){const s=this.audioChunks.find(o=>o.id===e);if(s){const o=new Blob([s.wavData],{type:"audio/wav"}),a=URL.createObjectURL(o),i=document.createElement("a");i.href=a,i.download=`chunk_${s.chunkNumber}.wav`,document.body.appendChild(i),i.click(),document.body.removeChild(i),URL.revokeObjectURL(a)}},deleteChunk(e){this.audioChunks=this.audioChunks.filter(s=>s.id!==e)},clearAllChunks(){this.audioChunks=[],this.chunkCounter=1,this.waitingToClose=!1},async startRecording(){try{this.error=null;const e=h(),s=g(),o=s.public.audio.transcriptionWsEndpoint;await e.connectWebSocket(o),this.stream=await navigator.mediaDevices.getUserMedia(this.getAudioConstraints());const a=s.public.audio.targetSampleRate;this.audioContext=new AudioContext,await this.audioContext.audioWorklet.addModule(new URL(""+new URL("audio-processor.worklet.hOMLPsal.ts",import.meta.url).href,import.meta.url));const i=this.audioContext.createMediaStreamSource(this.stream),t=s.public.audio.chunkDuration;this.audioWorklet=new AudioWorkletNode(this.audioContext,"audio-chunk-processor",{processorOptions:{targetSampleRate:a,chunkDuration:t}}),this.audioWorklet.port.onmessage=async r=>{const{type:n,wavData:u,isFinal:P}=r.data;if(n==="chunk"){const w={id:crypto.randomUUID(),wavData:new Uint8Array(u),targetSampleRate:r.data.targetSampleRate,timestamp:Date.now(),chunkNumber:this.chunkCounter++};this.audioChunks.push(w),await e.sendAudioChunk(o,w.wavData.buffer)}else n==="flush_done"&&this.flushPromiseResolve&&(this.flushPromiseResolve(),this.flushPromiseResolve=null)},i.connect(this.audioWorklet),this.audioWorklet.connect(this.audioContext.destination),this.isRecording=!0,this.waitingToClose=!1}catch(e){throw this.error=e.message,await this.stopRecording(),e}},async stopRecording(){try{this.isStopping=!0,this.stream&&(this.stream.getTracks().forEach(e=>e.stop()),this.stream=null),this.audioWorklet&&(this.audioWorklet.port.postMessage({type:"FLUSH"}),console.log("FLUSH message sent."),this.waitingToClose=!0,await new Promise(o=>{this.flushPromiseResolve=o}),console.log("Worker flush_done."),await h().finalize()),this.audioContext&&(await this.audioContext.close(),this.audioContext=null),this.isRecording=!1,this.isStopping=!1}catch(e){throw this.error=e.message,this.isStopping=!1,e}},async cleanup(){this.isRecording&&await this.stopRecording(),this.clearAllChunks()}}}),_={class:"space-y-4"},T={class:"flex items-center space-x-2"},D=["disabled"],U={class:"whitespace-nowrap"},N={key:0,class:"p-4 bg-red-50 text-red-600 rounded-md"},L=v({__name:"AudioRecorder",props:{disabled:{type:Boolean}},setup(e){const s=h(),o=A(),a=d("");b(()=>s.transcription,r=>{a.value=r}),d(5);const i=async()=>{try{o.isRecording?await o.stopRecording():await o.startRecording()}catch(r){console.error("Recording error:",r),alert(r.message||"An unexpected error occurred during recording.")}};navigator.mediaDevices.getUserMedia({audio:!0}).then(r=>{const n=new OfflineAudioContext(1,44100,44100);new AudioContext({sampleRate:n.sampleRate}).createMediaStreamSource(r)}).catch(r=>console.error("Error accessing microphone:",r));const t=y(()=>o.isStopping?"Stopping...":o.isRecording?"Recording...":"Start Recording");return(r,n)=>(k(),p("div",_,[c("div",T,[c("button",{onClick:i,disabled:r.disabled||l(o).isStopping,class:m(["flex items-center justify-center px-4 py-2.5 text-sm font-medium rounded-md focus:outline-none focus:ring-2 focus:ring-opacity-50 transition-all duration-200 shadow-sm text-white min-h-[40px]",l(o).isRecording?"bg-red-600 hover:bg-red-700 focus:ring-red-500":"bg-blue-600 hover:bg-blue-700 focus:ring-blue-500",r.disabled||l(o).isStopping?"opacity-50 cursor-not-allowed":""])},[(k(),p("svg",{class:m([{"animate-pulse":l(o).isRecording},"h-4 w-4 mr-2 flex-shrink-0"]),fill:"none",stroke:"currentColor",viewBox:"0 0 24 24"},n[0]||(n[0]=[c("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z"},null,-1)]),2)),c("span",U,f(l(t)),1)],10,D)]),!l(o).isRecording&&l(o).combinedError?(k(),p("div",N,f(l(o).combinedError),1)):S("",!0)]))}}),M=R(L,[["__scopeId","data-v-e321a0be"]]),O={class:"min-h-screen flex flex-col items-center justify-center bg-gray-100 p-4"},z={class:"mt-6 w-full max-w-md bg-white p-4 rounded-md shadow"},F=v({__name:"index",setup(e){const s=h(),o=d("");d(5),d("en"),d(!1),b(()=>s.transcription,i=>{o.value=i});const a=()=>{const i=new Blob([o.value],{type:"text/plain"}),t=URL.createObjectURL(i),r=document.createElement("a");r.href=t,r.download="transcription.txt",document.body.appendChild(r),r.click(),document.body.removeChild(r),URL.revokeObjectURL(t)};return(i,t)=>(k(),p("div",O,[t[2]||(t[2]=c("h1",{class:"text-2xl font-bold mb-4"},"Live Audio Transcription",-1)),x(M),c("div",z,[t[1]||(t[1]=c("h2",{class:"text-lg font-medium mb-2"},"Transcription:",-1)),E(c("textarea",{"onUpdate:modelValue":t[0]||(t[0]=r=>o.value=r),class:"w-full h-40 p-2 border rounded-md resize-none focus:outline-none focus:ring-blue-500 focus:border-blue-500"},null,512),[[W,o.value]]),c("button",{onClick:a,class:"mt-4 px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600"}," Download Transcription ")])]))}}),B=R(F,[["__scopeId","data-v-43db90e4"]]);export{B as default};
